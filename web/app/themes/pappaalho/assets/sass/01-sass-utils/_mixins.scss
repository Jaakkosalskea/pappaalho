// Typography helpers ->

@mixin fontFace($family, $src, $weight: normal, $style: normal) {
  @font-face {
    font-display: swap;
    font-family: $family;
    font-style: $style;
    font-weight: $weight;
    crossorigin: anonymous;

    src: url('#{$src}.woff2') format('woff2'), url('#{$src}.woff') format('woff'), url('#{$src}.ttf') format('truetype');
  }
}

@mixin responsive-font($min-font-size, $max-font-size, $min-vw: 320px, $max-vw: 1920px) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    font-size: $min-font-size;

    @media screen and (min-width: $min-vw) {
      font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
    }

    @media screen and (min-width: $max-vw) {
      font-size: $max-font-size;
    }
  }
}
// <- Typography helpers

// Animations ->
$transition-duration: .18s;

@mixin cubic-bezier($property: color, $duration: $transition-duration) {
  transition: $property $transition-duration cubic-bezier(.19, 1, .22, 1);
}
// <- Animations

// Aspect ratio ->
@mixin aspect-ratio($width, $height) {
  position: relative;

  &::before {
    content: '';
    display: block;
    padding-top: ($height / $width) * 100%;
    width: 100%;
  }

  > .content {
    bottom: 0;
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
  }
}
//<- Aspect ratio

// Box with shadow ->
// Use with @include box-with-shadow();
@mixin box-with-shadow($border_radius: 10px, $box_shadow_amount: 37px, $padding: 55px) {
  background-color: var(--color-white);
  border-radius: $border_radius;
  box-shadow: 1px 1px $box_shadow_amount 0 rgba(0, 0, 0, .05);
  padding: $padding;
}
// <- Box with shadow

// General ->
@mixin hiddentext() {
  display: block;
  font-size: 0;
  overflow: hidden;
  text-align: start;
  text-decoration: none;
  text-indent: -9999px;
}

@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

/* Convert Illustrator, InDesign and Photoshop tracking into letter spacing.
-------------------------*/

@function tracking( $target ){
  @return ($target / 1000) * 1em;
}

@mixin tracking( $target ){
  letter-spacing: tracking( $target );
}

// <- General
